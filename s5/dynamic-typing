#lang racket

(define xs (list 1 2 3 4))
(define ys (list (list 1 2) 3 4 (list 5 (list 6 7)) 8))

(define (sum1 xs) 
  (if (null? xs)
     0
     (if (number? (car xs))
        (+ (car xs) (sum1 (cdr xs)))
        (+ (sum1 (car xs)) (sum1 (cdr xs))))))

(define r1 (sum1 xs))
(define r2 (sum1 ys))